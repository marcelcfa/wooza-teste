{"version":3,"sources":["services/api.js","components/card/styles.js","components/card/Card.js","components/list/styles.js","components/list/List.js","App.js","index.js"],"names":["parseFetchResponse","res","ok","json","Error","getUsers","fetch","then","Container","styled","div","Image","img","UserInfo","Name","Jobrole","About","Card","user","key","id","src","alt","name","jobrole","about","List","users","map","App","state","isLoaded","error","this","setState","API","data","loading","message","Component","ReactDOM","render","document","getElementById"],"mappings":"iRACMA,EAAqB,SAACC,GAC1B,GAAKA,EAAIC,GAGP,OAAOD,EAAIE,OAFX,MAAM,IAAIC,MAAM,+BAKPC,EAAW,kBAAMC,MARd,mDAQ6BC,KAAKP,I,w9BCN3C,IAAMQ,EAAYC,IAAOC,IAAV,KAmBTC,EAAQF,IAAOG,IAAV,KAKLC,EAAWJ,IAAOC,IAAV,KAKRI,EAAOL,IAAOC,IAAV,KAIJK,EAAUN,IAAOC,IAAV,KAMPM,EAAQP,IAAOC,IAAV,KC5BHO,EAVF,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACL,kBAACV,EAAD,CAAWW,IAAMD,EAAKE,IAClB,kBAACT,EAAD,CAAOU,IAAMH,EAAKN,IAAMU,IAAKJ,EAAKK,OAClC,kBAACV,EAAD,KACI,kBAACC,EAAD,KAAQI,EAAKK,MACb,kBAACR,EAAD,KAAWG,EAAKM,SAChB,kBAACR,EAAD,KAASE,EAAKO,U,oNCPvB,IAAMjB,EAAYC,IAAOC,IAAV,KCSPgB,EAPF,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACT,kBAAC,EAAD,KACKA,EAAMC,KAAI,SAAAV,GAAI,OACf,kBAAC,EAAD,CAAMC,IAAMD,EAAKE,GAAKF,KAAOA,SC0BtBW,E,2MA5BbC,MAAQ,CACNH,MAAO,GACPI,UAAU,EACVC,MAAO,M,kKAILC,KAAKC,SAAS,CAAEH,UAAU,I,mBACNI,K,OAAdC,E,OACNH,KAAKC,SAAS,CAAEG,SAAS,EAAOV,MAAOS,EAAKT,Q,gDAE5CM,KAAKC,SAAS,CAAEF,MAAK,KAAED,UAAU,I,oGAInCE,KAAK5B,a,+BAEI,IAAD,EAC2B4B,KAAKH,MAAhCH,EADA,EACAA,MAAOI,EADP,EACOA,SAAUC,EADjB,EACiBA,MACzB,OAAIA,EACM,gCAASA,EAAMM,SAEpBP,EAGG,kBAAC,EAAD,CAAMJ,MAAOA,IAFX,iD,GAxBIY,aCClBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.90a7c3a7.chunk.js","sourcesContent":["const API_URL = \"https://marcelcfa.github.io/wooza-teste/db.json\"\nconst parseFetchResponse = (res) => {\n  if (!res.ok) {\n    throw new Error(\"Ops.. something went wrong\")\n  } else {\n    return res.json()\n  }\n}\nexport const getUsers = () => fetch(API_URL).then(parseFetchResponse)\n\nexport default {\n  getUsers\n}","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1 0 30%;\n    @media (max-width: 425px) {\n      flex: 1;\n    }\n  margin: 5px;\n  height: 150px;\n  background: #f2f2f2;\n  margin-right: 10px;\n    @media (max-width: 425px) {\n      margin: 0 0 10px 0;\n    }\n  padding: 10px 20px;\n  border-radius: 10px;\n  align-items: center;\n`;\n\nexport const Image = styled.img`\n  margin-right: 20px;\n  border-radius: 5px\n`;\n\nexport const UserInfo = styled.div`\n  height: 100%;\n  padding-top: 35px;  \n`;\n\nexport const Name = styled.div`\n  font-weight: bold;  \n`;\n\nexport const Jobrole = styled.div`\n  font-size: 12px;\n  color: gray;\n  \n`;\n\nexport const About = styled.div`\n  color: gray;\n  margin-top: 15px;\n  font-size: 12px;  \n`;","import React from 'react';\nimport { Container, Image, Name, Jobrole, UserInfo, About } from './styles';\n\nconst Card = ({ user }) => ( \n        <Container key={ user.id }>\n            <Image src={ user.img } alt={user.name} />\n            <UserInfo>\n                <Name>{ user.name }</Name>\n                <Jobrole>{ user.jobrole }</Jobrole>\n                <About>{ user.about }</About>\n            </UserInfo>            \n        </Container>\n)\nexport default Card;","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  @media (max-width: 425px) {\n    height: 100%;\n    padding: 10px;\n    }  \n`;","import React from 'react';\nimport Card from '../card/Card';\nimport { Container } from './styles';\n\nconst List = ({ users }) => (\n    <Container>\n        {users.map(user => (\n        <Card key={ user.id } user={ user } />\n        ))}\n    </Container>\n  )\nexport default List;\n","import React, { Component } from 'react';\n\nimport * as API from  './services/api';\nimport List from './components/list/List'\nclass App extends Component {\n  state = {\n    users: [],\n    isLoaded: false,\n    error: null\n  };\n  async getUsers () {\n    try {\n      this.setState({ isLoaded: true })\n      const data  = await API.getUsers()\n      this.setState({ loading: false, users: data.users })\n    } catch (error) {\n      this.setState({ error, isLoaded: false })\n    }\n  }\n  componentDidMount () {\n    this.getUsers()\n  }\n  render () {\n    const { users, isLoaded, error } = this.state;\n    if (error) {\n      return (<strong>{error.message}</strong>);\n    }\n    if (!isLoaded) {\n      return (<div>Loading ... </div>);\n    } \n    return (<List users={users} />);\n  }\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}